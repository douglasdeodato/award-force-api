import os
import requests
import json
from dotenv import load_dotenv
from flask import Flask, request, render_template, send_from_directory

# Initialize Flask app
app = Flask(__name__)

# Load environment variables from the .env file
dotenv_path = os.path.join(os.path.dirname(__file__), '..', '.env')
load_dotenv(dotenv_path)

# Define the API keys from the .env file
api_key = os.getenv("API_KEY")
api_key_external = os.getenv("API_KEY_EXTERNAL")

# Define the headers
headers = {
    'Accept': 'application/vnd.Creative Force.v2.1+json',
    'x-api-key': api_key
}

# Define a debugging mode flag
debug_mode = False

@app.route('/', methods=['GET', 'POST'])
def api_request():
    global debug_mode

    if request.method == 'POST':
        user_email = request.form['email']
        api_url = f"https://api.cr4ce.com/user/{user_email}"

        response = requests.get(api_url, headers=headers)

        if debug_mode:
            print(f"API URL: {api_url}")
            print(f"Response Status Code: {response.status_code}")
            print(f"Response Content: {response.text}")

        if response.status_code == 200:
            data = response.json()
            response_data = json.dumps(data, indent=4)
            # Save the JSON data to slug.json
            with open('slug.json', 'w') as json_file:
                json.dump(data, json_file, indent=4)
        else:
            response_data = f"Request failed with status code: {response.status_code}\n{response.text}"
    else:
        response_data = None

    # Read the authentication token from auth_token.json if it exists
    auth_token = None
    auth_token_filename = os.path.join(os.path.dirname(__file__), 'auth_token.json')
    if os.path.exists(auth_token_filename):
        with open(auth_token_filename, 'r') as auth_token_file:
            auth_token_data = json.load(auth_token_file)
            auth_token = auth_token_data.get('auth_token', '')

    return render_template('form_template.html', response_data=response_data, auth_token=auth_token)

@app.route('/get-auth-token', methods=['GET'])
def get_auth_token():
    # Read the 'slug' from the JSON file generated by get-user-by-email.py
    json_filename = os.path.join(os.path.dirname(__file__), 'slug.json')

    with open(json_filename, 'r') as json_file:
        data = json.load(json_file)
        slug = data.get('slug', '')

    # Construct the API URL using the 'slug'
    api_url_external = f"https://api.cr4ce.com/user/{slug}/auth-token"

    # Define the headers for the external API request
    headers_external = {
        'Accept': 'application/vnd.Creative Force.v2.1+json',
        'x-api-key': api_key_external
    }

    # Send the GET request to get the authentication token
    response = requests.get(api_url_external, headers=headers_external)

    if response.status_code == 200:
        data = response.json()
        auth_token = data.get('auth_token', '')

        # Save the authentication token to auth_token.json
        auth_token_filename = os.path.join(os.path.dirname(__file__), 'auth_token.json')
        with open(auth_token_filename, 'w') as auth_token_file:
            json.dump(data, auth_token_file, indent=4)

        return f"Authentication Token: {auth_token}"
    else:
        return f"Request failed with status code: {response.status_code}\n{response.text}"

if __name__ == '__main__':
    debug_mode = True  # Set debug_mode to True when running locally for debugging
    app.run(debug=True)
